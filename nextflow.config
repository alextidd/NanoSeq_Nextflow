params.short = false

params {

  // help
  help = false

  // run parameters
  keep_temp = false
  bwa_image = "docker://quay.io/wtsicgp/pcap-core:5.7.0"
  remap = false
  jobs = 100

  // reference parameters
  cov_exclude = "MT,MT%,hs37d5"
  noise_bed = ""
  snp_bed = ""

  // input/output parameters
  location = "irods"
  study = ""
  outDir = "."
  sample_sheet = ""
  ext = "cram"
  bams_publish_subdir = "raw_lane_bams"

  // preprocessing, mapping and coverage parameters
  fastq_tags_m = 3
  fastq_tags_s = 4
  nanoseq_dedup_m = 1
  min_mapQ = 20
  cov_q = 0
  cov_larger = 50000
  cov_include = ""

  // restriction site sequence
  seq = "TGCA"

  // panel
  panel = ""

  // part parameters
  part_excludeBED = ""
  part_excludeCov = 0

  // dsa parameters
  dsa_d = 2
  dsa_q = 30
  dsa_M = 0

  // post paramaters
  post_triNuc = ""

  // variantcaller parameters
  var_a = 50
  var_b = 0 
  var_c = 0
  var_d = 2
  var_f = 0.9
  var_i = 0.1
  var_m = 8
  var_n = 3
  var_p = 0
  var_q = 60
  var_r = 144
  var_v = 0.01
  var_x = 8
  var_z = 15

  // indel parameters
  indel_rb = 2
  indel_t3 = 135
  indel_t5 = 10
  indel_z = 15
  indel_v = 0.01
  indel_a = 50
  indel_c = 0

  // verify bam id parameters
  vb_epsilon ="1e-12"
  vb_ud = ""
  vb_bed = ""
  vb_mu = ""
}

profiles {

  grch37 {
    params.ref = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/genome.fa"
    params.cov_exclude = "MT,GL%,NC_%,hs37d5"
    params.snp_bed = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/botseq/SNP.sorted.bed.gz"
    params.noise_bed = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/botseq/NOISE.sorted.bed.gz"
    params.vb_ud = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/verifybamid/ALL_500K.strictmasked.ok.vcf.UD"
    params.vb_bed = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/verifybamid/ALL_500K.strictmasked.ok.vcf.bed"
    params.vb_mu = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH37d5/verifybamid/ALL_500K.strictmasked.ok.vcf.mu"
  }

  grch38 {
    params.ref = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH38/genome.fa"
    params.cov_exclude = "chrM,chr%_random,chrUn_%,chr%_alt,HLA-%"
    params.snp_bed = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH38_full_analysis_set_plus_decoy_hla/botseq/SNP.sorted.GRCh38.bed.gz"
    params.noise_bed = "/lustre/scratch124/casm/team78pipelines/reference/human/GRCH38_full_analysis_set_plus_decoy_hla/botseq/NOISE.sorted.GRCh38.bed.gz"
    params.vb_ud ="/lustre/scratch124/casm/team78pipelines/reference/human/GRCh38_full_analysis_set_plus_decoy_hla/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.UD"
    params.vb_bed ="/lustre/scratch124/casm/team78pipelines/reference/human/GRCh38_full_analysis_set_plus_decoy_hla/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.bed"
    params.vb_mu ="/lustre/scratch124/casm/team78pipelines/reference/human/GRCh38_full_analysis_set_plus_decoy_hla/verifybamid/1000g.phase3.100k.b38.vcf.gz.dat.mu"
  }

  lsf_singularity {
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'normal'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
  }

  // *MODIFIED* (ao7): added new profile with cleanup option (currently not used)
  lsf_singularity_clean_temp {
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'normal'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    cleanup = true  // delete `work` contents after success (does not affect tmpNanoSeq)
  }
  
  lsf {
    params.nanoseq_image = ""  //turn off singularity for nanoseq
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'long'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch124/casm/team78pipelines/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch124/casm/team78pipelines/cram_cache/%2s/%2s/%s:/lustre/scratch117/core/sciops_repository/cram_cache/%2s/%2s/%s:/lustre/scratch118/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
  }

}
