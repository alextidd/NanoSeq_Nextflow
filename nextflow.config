profiles {

  lsf_singularity {
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'normal'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
  }

  // *MODIFIED* (ao7): added new profile with cleanup option (currently not used)
  lsf_singularity_clean_temp {
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'normal'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch126/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
    cleanup = true  // delete `work` contents after success (does not affect tmpNanoSeq)
  }
  
  lsf {
    params.nanoseq_image = ""  //turn off singularity for nanoseq
    singularity.enabled = true
    singularity.runOptions = "-B /lustre -B /software" //necesary to see /lustre in containers
    singularity.cacheDir = "$PWD"
    singularity.envWhitelist = "REF_PATH" //required by  CRAM
    process.executor = 'lsf'
    process.queue = 'long'
    executor.perJobMemLimit = true
    executor.queueSize = 1000
    process.cache = 'lenient' //necesary for restart in lustre
    process.errorStrategy = 'retry' //relaunch jobs upon failure
    process.maxRetries = 5
    env.REF_CACHE = "/lustre/scratch124/casm/team78pipelines/cram_cache/%2s/%2s/%s" //required for CRAM
    env.REF_PATH = "/lustre/scratch124/casm/team78pipelines/cram_cache/%2s/%2s/%s:/lustre/scratch117/core/sciops_repository/cram_cache/%2s/%2s/%s:/lustre/scratch118/core/sciops_repository/cram_cache/%2s/%2s/%s" //required for CRAM
  }

}
